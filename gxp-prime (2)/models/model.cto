/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.company.healthcare


/* Enums */


enum Quality{
    o Pending
    o Completed
}

enum Status{
    o TO_BE_MANUFACTURED
    o TO_BE_PURCHASED
    o TO_BE_ASSEMBLED
    o MANUFACTURED
    o PURCHASED
    o IN_PROCESS
    o READY_TO_SHIP
    o SHIPPED
    o INSTALLED
    o IN_USE
    o MAINTENANCE
    o BROKEN_DOWN
    o RETIRED
}

enum PartType{
	o MANUFACTURED_ITEM
    o PROCURED_ITEM
}

/* Assets */

asset Assembly identified by uid {
    o String make optional
    o String uid
    o DateTime completionDate optional
    o Quality assemblyQuality
    o Status status
    --> Assembly [] childAssembly optional
    --> Assembly parentAssembly optional
    --> Part part
}

asset Part identified by partNo {
	o PartType type
    o String partNo
    o String partName
    --> Part [] childPart optional
    --> Part parentPart optional

}


/* Participants */

abstract participant Identifier identified by pid {
  o String pid
}

participant Auditor extends Identifier {
}

participant Admin extends Identifier {
}

participant User extends Identifier {
  o Assembly [] assignedAssembly optional
}

/* Transactions */

transaction Procuring {
  
o String comment optional
o Assembly prevState optional
o Assembly newState optional 
  
--> Assembly procuredAssembly
--> Admin procurementAdmin optional
--> User procurementUser optional
}

transaction Manufacturing{
o Assembly prevState optional
o Assembly newState optional

--> Assembly toManufactureAssembly 
--> Admin manufacturingAdmin optional
--> User manufacturingUser optional
}

transaction Assembling{

o Assembly prevState optional
o Assembly newState optional

--> Assembly toAssembleAssembly 
--> Admin assemblingAdmin optional
--> User assemblingUser optional

}

transaction GenerateBOM {
--> Assembly parentAssembly
}

transaction QualityCheck {
--> Assembly qualityCheckAssembly
--> Admin qualityAdmin optional
--> User qualityUser optional
}

